{"version":3,"sources":["components/Map.js","components/Slider.js","components/ParkInfo.js","urls.js","components/Header.js","components/Webcam.js","components/Articles.js","pages/Park.js","images/hill.jpg","pages/Home.js","components/Sidebar.js","components/SearchResults.js","util.js","images/mountains.jpg","pages/Activities.js","images/canyon.jpg","pages/States.js","images/rock.jpg","pages/Topics.js","images/field.jpg","pages/Keyword.js","pages/About.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","default","iconUrl","shadowUrl","Map","props","position","Number","latitude","longitude","className","MapContainer","center","zoom","scrollWheelZoom","style","height","width","TileLayer","attribution","url","Marker","Tooltip","Slider","images","map","image","src","alt","ParkInfo","Slide","in","direction","timeout","Grid","container","spacing","item","Card","variant","Box","padding","data","description","sx","Divider","contacts","emailAddresses","address","emailAddress","phoneNumbers","phoneNumber","addresses","line1","city","stateCode","postalCode","operatingHours","Button","target","href","directionsUrl","activities","activity","name","join","topics","topic","maxWidth","entranceFees","fee","title","cost","entrancePasses","keyUrl","baseUrl","PARKS_BY_KEYWORD","keyword","PARK_DATA","code","PARKS_BY_ACTIVITIES","activityIds","value","index","length","ACTIVITIES","PARKS_BY_TOPICS","topicIds","TOPICS","PARKS_BY_STATE","WEBCAM","parkCode","ARTICLES","drawerWidth","Header","AppBar","ml","Toolbar","Typography","noWrap","component","Webcam","p","Paper","elevation","status","isStreaming","Articles","Zoom","CardMedia","listingImage","CardContent","listingDescription","substring","CardActions","Park","ComponentList","INFO","MAP","IMAGES","useState","parkData","setParkData","setComponent","webcams","setWebcams","articles","setArticles","useParams","useEffect","axios","get","API_URLS","then","response","current","fullName","FormControl","marginBottom","FormLabel","RadioGroup","row","onChange","event","Object","values","FormControlLabel","control","Radio","label","webcam","article","Home","Stack","Fade","marginRight","picture","opacity","top","left","marginTop","sourceType","userId","options","Sidebar","Drawer","flexShrink","boxSizing","anchor","List","ListItem","button","RouterLink","to","ListItemText","primary","justifyContent","alignItems","SearchResults","parkList","park","Grow","mergeParks","doMerge","uniqueParks","parks","i","parkFilter","j","set","filter","getMultipleSelectedString","selected","selectedString","stateList","Activities","setActivities","setSelected","parkResults","setParkResults","id","catch","error","console","log","isSelectedMultiple","isMulti","States","Topics","setTopics","Keyword","input","setInput","searched","setSearched","TextField","e","onClick","About","App","display","basename","process","flexGrow","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","main","secondary","background","paper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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CImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,aACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,cACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,uBACPnE,MAAO,MAEX,CACImE,MAAO,UACPnE,MAAO,MAEX,CACImE,MAAO,UACPnE,MAAO,MAEX,CACImE,MAAO,OACPnE,MAAO,MAEX,CACImE,MAAO,SACPnE,MAAO,MAEX,CACImE,MAAO,QACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,UACPnE,MAAO,MAEX,CACImE,MAAO,OACPnE,MAAO,MAEX,CACImE,MAAO,SACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,YACPnE,MAAO,MAEX,CACImE,MAAO,QACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,gBACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,YACPnE,MAAO,MAEX,CACImE,MAAO,cACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,UACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,SACPnE,MAAO,MAEX,CACImE,MAAO,gBACPnE,MAAO,MAEX,CACImE,MAAO,aACPnE,MAAO,MAEX,CACImE,MAAO,aACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,iBACPnE,MAAO,MAEX,CACImE,MAAO,eACPnE,MAAO,MAEX,CACImE,MAAO,2BACPnE,MAAO,MAEX,CACImE,MAAO,OACPnE,MAAO,MAEX,CACImE,MAAO,WACPnE,MAAO,MAEX,CACImE,MAAO,SACPnE,MAAO,MAEX,CACImE,MAAO,eACPnE,MAAO,MAEX,CACImE,MAAO,cACPnE,MAAO,MAEX,CACImE,MAAO,eACPnE,MAAO,MAEX,CACImE,MAAO,iBACPnE,MAAO,MAEX,CACImE,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","file":"static/js/main.2466a719.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Tooltip } from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css'\n\n// https://stackoverflow.com/questions/49441600/react-leaflet-marker-files-not-found\n// Solution to react leaflet marker not rendering properly\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png').default,\n    iconUrl: require('leaflet/dist/images/marker-icon.png').default,\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png').default\n});\n\nconst Map = (props) => {\n    \n  const position = [Number(props.latitude), Number(props.longitude)]\n\n  return (\n    <div className=\"map__container\">\n      <MapContainer\n        center={position}\n        zoom={13}\n        scrollWheelZoom={false}\n        style={{ height: '80vh', width: '80wh' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributorsz'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position}>\n            <Tooltip>\n                {\"Latitude: \" + props.latitude + \", Longitude: \" + props.longitude}\n            </Tooltip>\n        </Marker>\n      </MapContainer>\n    </div>\n  )\n};\n  \nexport default Map;","import AwesomeSlider from \"react-awesome-slider\";\nimport \"react-awesome-slider/dist/styles.css\"\n\n// Shows images in a gallery format using React Awesome Slider component \nconst Slider = props => {\n\n    // Maps image array from props to individual images\n    return ( \n        <AwesomeSlider>\n            {props.images.map((image) => {\n                return <div><img src={image.url} alt=\"Link invalid\"/></div>\n            })}\n        </AwesomeSlider>\n    );\n};\n  \nexport default Slider;","import Slide from '@mui/material/Slide'\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Divider from '@mui/material/Divider'\n\n\nconst ParkInfo = props => {\n    return ( \n        <Slide in={true} direction=\"up\" timeout={10000}>\n        <Grid container spacing={5}>\n            <Grid item>\n                <Card variant=\"outlined\">\n                    <Box padding={2}>\n                        <h3>{props.data.description}</h3>\n                    </Box>\n                </Card>\n            </Grid>\n\n            <Grid item sx={{width: '32vw'}}>\n                <Card variant=\"outlined\">\n                    <Box padding={2}>\n                        <h3>General Information</h3>\n                        <Divider/>\n                        {props.data.contacts.emailAddresses.map((address) => {\n                            return <p>{address.emailAddress}</p>\n                        })}\n                        <Divider/>\n                        <p>{\"Phone: \" + props.data.contacts.phoneNumbers[0].phoneNumber}</p>\n                        <Divider/>\n                        <p>\n                            { props.data.addresses[0].line1 + \", \"\n                            + props.data.addresses[0].city + \", \"\n                            + props.data.addresses[0].stateCode + \", \" \n                            + props.data.addresses[0].postalCode}\n                        </p>\n                        <Divider/>\n                        <p>{props.data.operatingHours[0].description}</p>\n                        <Button variant=\"contained\" target=\"_blank\" href={props.data.directionsUrl}>Directions</Button>\n                    </Box>\n                </Card>\n            </Grid>\n\n            <Grid item sx={{width: '45vw'}}>\n                <Card variant=\"outlined\">\n                    <Box padding={2}>\n                        <h3>Activities</h3>\n                        <Divider/>\n                        <p>{props.data.activities.map(activity => activity.name).join(\", \")}</p>\n                    </Box>\n                </Card>\n            </Grid>\n\n            <Grid item sx={{width: '45vw'}}>\n                <Card variant=\"outlined\">\n                    <Box padding={2}>\n                        <h3>Topics</h3>\n                        <Divider/>\n                        <p>{props.data.topics.map(topic => topic.name).join(\", \")}</p>\n                    </Box>\n                </Card>\n            </Grid>\n\n            <Grid item sx={{maxWidth: '32vw'}}>\n                <Card variant=\"outlined\">\n                    <Box padding={2}>\n                        <h3>Fees</h3>\n                        <Divider/>\n                        {props.data.entranceFees.map((fee) => {\n                            return <p>{fee.title + \"- $\" + fee.cost + \" (\" + fee.description + \")\"}</p>\n                        })}\n                        {props.data.entrancePasses.map((fee) => {\n                            return <p>{fee.title + \"- $\" + fee.cost + \" (\" + fee.description + \")\"}</p>\n                        })}\n                    </Box>\n                </Card>\n            </Grid>\n\n            <Grid item>\n                <Button variant=\"contained\" target=\"_blank\" href={props.data.url}>Visit Park Website</Button>\n            </Grid>\n        </Grid>\n        </Slide>\n    );\n};\n  \nexport default ParkInfo;","// Hard coded endpoints for API calls\n\n// Loads my API key from .env file \nconst key = process.env.REACT_APP_API_KEY\nconst keyUrl = \"api_key=\" + key\n\n// Current NPS api base for v1\nconst baseUrl = \"https://developer.nps.gov/api/v1/\"\n\nexport default {\n\n    // Endpoint for parks API call with keyword filter set\n    PARKS_BY_KEYWORD: (keyword) => baseUrl + \"parks?q=\" + keyword + \"&\" + keyUrl,\n\n    // Endpoint for specific info on One park\n    PARK_DATA: (code) => baseUrl + \"parks?parkCode=\" + code + \"&\" + keyUrl,\n\n    // Endpoint gets all parks from a list of associated activities\n    PARKS_BY_ACTIVITIES: (activities) => {\n        let activityIds = activities[0].value\n        for (let index = 1; index < activities.length; index++) {\n            activityIds += (\",\" + activities[index].value)\n        }\n        return baseUrl + \"activities/parks?id=\" + activityIds + \"&\" + keyUrl\n    },\n\n    // Endpoint to list all activities\n    ACTIVITIES: baseUrl + \"activities\" + \"?\" + keyUrl,\n\n    // Endpoint gets all parks from a list of associated topics\n    PARKS_BY_TOPICS: (topics) => {\n        let topicIds = topics[0].value\n        for (let index = 1; index < topics.length; index++) {\n            topicIds += (\",\" + topics[index].value)\n        }\n        return baseUrl + \"topics/parks?id=\" + topicIds + \"&\" + keyUrl\n    },\n\n    // Endpoint to list all topics\n    TOPICS: baseUrl + \"topics\" + \"?\" + keyUrl,\n\n    // Endpoint to return parks in a state, by 2 letter state abbreviation\n    PARKS_BY_STATE: (stateCode) => baseUrl + \"parks?stateCode=\" + stateCode + \"&\" + keyUrl,\n\n    // Endpoint to get webcams for a given park\n    WEBCAM: (parkCode) => baseUrl + \"webcams?parkCode=\" + parkCode + \"&\" + keyUrl,\n\n    // Endpoint to get related articles for a park\n    ARTICLES: (parkCode) => baseUrl + \"articles?parkCode=\" + parkCode + \"&limit=12&\" + keyUrl,\n}","import * as React from 'react';\nimport Toolbar from '@mui/material/Toolbar';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\n\nconst drawerWidth = '20vw';\n\nconst Header = props => {\n    return ( \n        <div>\n            <AppBar\n                position=\"fixed\"\n                sx={{ \n                        width: `calc(100vw - ${drawerWidth})`,\n                        ml: `${drawerWidth}`,\n                    }}\n            >\n                <Toolbar>\n                <Typography variant=\"h6\" noWrap component=\"div\">\n                    {props.title}\n                </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n  };\n  \n  export default Header;","import Paper from \"@mui/material/Paper\"\nimport Box from \"@mui/material/Box\"\nimport Button from \"@mui/material/Button\"\n\n// Component for displaying metadata about park webcams, and mapping images if any\nconst Webcam = props => {\n    return (\n        <Box sx={{ p: 3 }}>\n            <Paper elevation={3}>\n                <Box sx={{ p: 3 }}>\n                    <h2>{\"Webcam \" + props.index + \": \" + props.data.title}</h2>\n                    <h4>{\"Description: \" + props.data.description}</h4>\n                    <h4>{\"Status: \" + props.data.status}</h4>\n                    <h4>{props.data.isStreaming ? \"Webcam is currently streaming\" : \"Webcam is not streaming\"}</h4>\n                    <Button variant=\"contained\" target=\"_blank\" href={props.data.url}>Learn More - Visit Webcam Website</Button>\n                    {   \n                        props.data.images.length < 1 ?\n                        <h4>Sorry, no images available for this webcam.</h4>\n                        :\n                        (props.data.images.map((image) => {\n                            return <img style={{width: '70vw'}} src={image.url} alt=\"Link invalid\"/>\n                        }))\n                    }\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Webcam;","import Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from \"@mui/material/Grid\";\nimport Zoom from '@mui/material/Zoom';\n\n// Component for displaying park articles info in cards\nconst Articles = props => {\n    return (\n\n            <Zoom in={true} timeout={props.index % 2 === 0 ? 5000 : 10000}>\n            <Grid item>\n                <Card sx={{ maxWidth: '17vw' }}>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Link invalid\"\n                        height=\"140\"\n                        image={props.data.listingImage.url}\n                    />\n                    <CardContent>\n                        <h4>{props.data.title}</h4>\n                        <p>{\"Overview: \" + props.data.listingDescription.substring(0,300) + \"...\"}</p>\n                    </CardContent>\n                    <CardActions>\n                        <Button variant=\"contained\" target=\"_blank\" href={props.data.url}>Go To Article Page</Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n            </Zoom>\n    )\n}\n\nexport default Articles;","import { useParams } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Radio from '@mui/material/Radio'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\nimport Map from \"../components/Map\"\nimport Slider from \"../components/Slider\"\nimport ParkInfo from \"../components/ParkInfo\"\nimport API_URLS from \"../urls\"\nimport Header from \"../components/Header\"\nimport Webcam from \"../components/Webcam\"\nimport Articles from \"../components/Articles\"\nimport Grid from \"@mui/material/Grid\"\n\n// General component for park details, renders info based on Park Code\nconst Park = props => {\n\n    // Enum for names of the components being displayed one at a time\n    const ComponentList = {\n        INFO: \"Park Information\",\n        MAP: \"Map\",\n        IMAGES: \"Gallery\",\n        WEBCAM: \"Webcams\",\n        ARTICLES: \"Related Articles\"\n    }\n\n    // State hooks for park information and current component being displayed, and webcams if any\n    const [parkData, setParkData] = useState(null)\n    const [component, setComponent] = useState(ComponentList.INFO)\n    const [webcams, setWebcams] = useState([])\n    const [articles, setArticles] = useState([])\n\n    // Gets park code from the Router parameters to display corresponding data\n    const { code } = useParams();\n\n    // Sets current park data in the state to results from API get request\n    const fetchParkData = () => {\n        axios.get(API_URLS.PARK_DATA(code))\n        .then((response) => {\n            setParkData(response.data.data[0])\n        })\n    }\n\n    // Sets current webcams in the state to results from API get request\n    const fetchWebcams = () => {\n        axios.get(API_URLS.WEBCAM(code))\n        .then((response) => {\n            setWebcams(response.data.data)\n        })\n    }\n\n    // Sets current articles in the state to results from API get request\n    const fetchArticles = () => {\n        axios.get(API_URLS.ARTICLES(code))\n        .then((response) => {\n            setArticles(response.data.data)\n        })\n    }\n\n    // Fetches park data once on page load\n    useEffect(() => {\n        fetchParkData()\n        fetchWebcams()\n        fetchArticles()\n    }, [])\n\n    // Decides what to display based on what button is currently selected\n    const componentReducer = (current) => {\n        if (parkData == null) {\n            return <h2>Loading</h2>\n        }\n\n        // extract strings\n        else if (current === ComponentList.INFO) {\n            return <ParkInfo data={parkData} />\n        }\n        else if (current === ComponentList.IMAGES) {\n            return <Slider images={parkData.images}/>\n        }\n        else if (current === ComponentList.MAP) {\n            return <Map latitude={parkData.latitude} longitude={parkData.longitude}/>\n        }\n        else if (current === ComponentList.WEBCAM) {\n            if (webcams.length === 0) {\n                return <h2>Sorry, no webcams were found. Check out the Gallery instead!</h2>\n            }\n            else {\n                return (webcams.map((webcam, index) => {\n                    return <Webcam data={webcam} index={index + 1}/>\n                }))\n            }\n        }\n        else if (current === ComponentList.ARTICLES) {\n            if (articles.length === 0) {\n                return <h2>Sorry, no articles were found. Try a Google search!</h2>\n            }\n            else {\n                return <Grid container spacing={5}>\n                            {(articles.map((article, index) => {\n                                return <Articles data={article} index={index + 1}/>\n                            }))}\n                        </Grid>\n            }\n        }\n    }\n\n    return (\n        <div>\n            <Header title={parkData == null ? \"\" : parkData.fullName}/>\n            <FormControl component=\"fieldset\" style={{marginBottom:'2vh'}}>\n                <FormLabel component=\"legend\">Display</FormLabel>\n\n                {/* onchange property of buttons sets the current component in state */}\n                <RadioGroup\n                    row\n                    aria-label=\"display\"\n                    name=\"controlled-radio-buttons-group\"\n                    value={component}\n                    onChange={(event) => setComponent(event.target.value)}\n                >\n\n                    {/* maps enums to controllable toggle buttons */}\n                    {Object.values(ComponentList).map((component) => {\n                        return <FormControlLabel \n                                    value={component} \n                                    control={<Radio />}\n                                    label={component}\n                                />\n                    })}\n                </RadioGroup>\n            </FormControl>\n\n            {componentReducer(component)}\n        </div>\n    );\n  };\n  \nexport default Park;","export default __webpack_public_path__ + \"static/media/hill.5661fada.jpg\";","import Header from \"../components/Header\";\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport picture from '../images/hill.jpg'\nimport Stack from '@mui/material/Stack';\nimport Fade from '@mui/material/Fade';\n\n// Homepage with embed component to NPS twitter\nconst Home = props => {\n    return (\n        <div>\n            <Header title={\"Home\"}/>\n            <Stack direction=\"row\">\n                <Fade in={true} timeout={7000}>\n                    <div style={{height:'83vh',  position:'relative', marginRight:'3vw'}}>\n                        <img src={picture} alt=\"Image of canyon\" style={{height: '100%', width:\"100%\", opacity:0.5}}/>\n                        <h2 style={{position: 'absolute', top: '45%', left:'25%', marginTop:'0'}}>Visit our National Parks!</h2>\n                    </div>\n                </Fade>\n                <div style={{width:'30vw'}}>\n                    <TwitterTimelineEmbed\n                        sourceType=\"profile\"\n                        userId={36771809}\n                        options={{height: '83vh'}}\n                        />\n                </div>\n            </Stack>\n        </div>\n    );\n};\n  \nexport default Home;","import * as React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Stack from '@mui/material/Stack';\nimport { Link as RouterLink } from \"react-router-dom\";\n\n\n\nconst drawerWidth = '20vw';\n\nconst Sidebar = props => {\n    return ( \n        <div>\n            <Drawer\n                sx={{\n                width: drawerWidth,\n                flexShrink: 0,\n                '& .MuiDrawer-paper': {\n                    width: drawerWidth,\n                    boxSizing: 'border-box',\n                },\n                }}\n                variant=\"permanent\"\n                anchor=\"left\"\n            >\n                <Toolbar>\n                    <h4>Explore National Parks</h4>\n                </Toolbar>\n                <Divider />\n                <List>\n                    <ListItem button component={RouterLink} to=\"/\">\n                        <ListItemText primary={\"Home\"} />\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={RouterLink} to=\"/activities\">\n                        <ListItemText primary={\"Search by Activities\"} />\n                    </ListItem>\n                    <ListItem button component={RouterLink} to=\"/states\">\n                        <ListItemText primary={\"Search by States\"} />\n                    </ListItem>\n                    <ListItem button component={RouterLink} to=\"/topics\">\n                        <ListItemText primary={\"Search by Topic\"} />\n                    </ListItem>\n                    <ListItem button component={RouterLink} to=\"/keyword\">\n                        <ListItemText primary={\"Search by Keyword\"} />\n                    </ListItem>\n                </List>\n                <Divider />\n                <Stack style={{height:'100%'}} justifyContent=\"flex-end\" alignItems=\"center\">\n                <List>\n                    <ListItem button component={RouterLink} to=\"/about\">\n                        <ListItemText primary={\"About\"} />\n                    </ListItem>\n                </List>\n                </Stack>\n            </Drawer>\n        </div>\n    );\n  };\n  \n  export default Sidebar;","import Button from \"@mui/material/Button\"\nimport Grid from \"@mui/material/Grid\"\nimport Grow from \"@mui/material/Grow\"\nimport { Link as RouterLink } from \"react-router-dom\"\n\n\n// Component for displaying parks that match the according search filters\nconst SearchResults = props => {\n\n    // Maps park list to buttons with links to the corresponding park specific page\n    return ( \n        <Grid container spacing={2}>\n            {props.parkList.map((park) => {\n\n                return  <Grow in={true} timeout={2000}>\n                            <Grid item>\n                                <Button \n                                    key={park.parkCode}\n                                    to={\"/park/\" + park.parkCode}\n                                    component={RouterLink}\n                                    variant=\"contained\"\n                                >\n                                    {park.fullName}\n                                </Button>\n                            </Grid>\n                        </Grow>\n            })}\n        </Grid>\n    );\n};\n  \n  export default SearchResults;","\n// Uses AND logic to merge sets of multiple parks\n// Hashmap allows O(1) access to filtered list\nexport const mergeParks = (data, doMerge) => {\n    let uniqueParks = data[0].parks\n    if (doMerge) {\n        for (let i = 1; i < data.length; i++) {\n            const parkFilter = new Map()\n            for (let j = 0; j < data[i].parks.length; j++) {\n                parkFilter.set(data[i].parks[j].parkCode, true)\n            }\n            uniqueParks = uniqueParks.filter((park) => parkFilter.get(park.parkCode) != null)\n        }\n    }\n    return uniqueParks\n}\n\nexport const getMultipleSelectedString = (selected) => {\n    let selectedString = \"Parks with \" + selected[0].label\n    for (let index = 1; index < selected.length; index++) {\n        selectedString += (\" AND \" + selected[index].label)\n    }\n    return selectedString\n}\n\n// List of American states with both abbreviation and full name\nexport const stateList = \n[\n    {\n        label: \"Alabama\",\n        value: \"AL\"\n    },\n    {\n        label: \"Alaska\",\n        value: \"AK\"\n    },\n    {\n        label: \"American Samoa\",\n        value: \"AS\"\n    },\n    {\n        label: \"Arizona\",\n        value: \"AZ\"\n    },\n    {\n        label: \"Arkansas\",\n        value: \"AR\"\n    },\n    {\n        label: \"California\",\n        value: \"CA\"\n    },\n    {\n        label: \"Colorado\",\n        value: \"CO\"\n    },\n    {\n        label: \"Connecticut\",\n        value: \"CT\"\n    },\n    {\n        label: \"Delaware\",\n        value: \"DE\"\n    },\n    {\n        label: \"District Of Columbia\",\n        value: \"DC\"\n    },\n    {\n        label: \"Florida\",\n        value: \"FL\"\n    },\n    {\n        label: \"Georgia\",\n        value: \"GA\"\n    },\n    {\n        label: \"Guam\",\n        value: \"GU\"\n    },\n    {\n        label: \"Hawaii\",\n        value: \"HI\"\n    },\n    {\n        label: \"Idaho\",\n        value: \"ID\"\n    },\n    {\n        label: \"Illinois\",\n        value: \"IL\"\n    },\n    {\n        label: \"Indiana\",\n        value: \"IN\"\n    },\n    {\n        label: \"Iowa\",\n        value: \"IA\"\n    },\n    {\n        label: \"Kansas\",\n        value: \"KS\"\n    },\n    {\n        label: \"Kentucky\",\n        value: \"KY\"\n    },\n    {\n        label: \"Louisiana\",\n        value: \"LA\"\n    },\n    {\n        label: \"Maine\",\n        value: \"ME\"\n    },\n    {\n        label: \"Maryland\",\n        value: \"MD\"\n    },\n    {\n        label: \"Massachusetts\",\n        value: \"MA\"\n    },\n    {\n        label: \"Michigan\",\n        value: \"MI\"\n    },\n    {\n        label: \"Minnesota\",\n        value: \"MN\"\n    },\n    {\n        label: \"Mississippi\",\n        value: \"MS\"\n    },\n    {\n        label: \"Missouri\",\n        value: \"MO\"\n    },\n    {\n        label: \"Montana\",\n        value: \"MT\"\n    },\n    {\n        label: \"Nebraska\",\n        value: \"NE\"\n    },\n    {\n        label: \"Nevada\",\n        value: \"NV\"\n    },\n    {\n        label: \"New Hampshire\",\n        value: \"NH\"\n    },\n    {\n        label: \"New Jersey\",\n        value: \"NJ\"\n    },\n    {\n        label: \"New Mexico\",\n        value: \"NM\"\n    },\n    {\n        label: \"New York\",\n        value: \"NY\"\n    },\n    {\n        label: \"North Carolina\",\n        value: \"NC\"\n    },\n    {\n        label: \"North Dakota\",\n        value: \"ND\"\n    },\n    {\n        label: \"Northern Mariana Islands\",\n        value: \"MP\"\n    },\n    {\n        label: \"Ohio\",\n        value: \"OH\"\n    },\n    {\n        label: \"Oklahoma\",\n        value: \"OK\"\n    },\n    {\n        label: \"Oregon\",\n        value: \"OR\"\n    },\n    {\n        label: \"Pennsylvania\",\n        value: \"PA\"\n    },\n    {\n        label: \"Puerto Rico\",\n        value: \"PR\"\n    },\n    {\n        label: \"Rhode Island\",\n        value: \"RI\"\n    },\n    {\n        label: \"South Carolina\",\n        value: \"SC\"\n    },\n    {\n        label: \"South Dakota\",\n        value: \"SD\"\n    },\n    {\n        label: \"Tennessee\",\n        value: \"TN\"\n    },\n    {\n        label: \"Texas\",\n        value: \"TX\"\n    },\n    {\n        label: \"Utah\",\n        value: \"UT\"\n    },\n    {\n        label: \"Vermont\",\n        value: \"VT\"\n    },\n    {\n        label: \"Virgin Islands\",\n        value: \"VI\"\n    },\n    {\n        label: \"Virginia\",\n        value: \"VA\"\n    },\n    {\n        label: \"Washington\",\n        value: \"WA\"\n    },\n    {\n        label: \"West Virginia\",\n        value: \"WV\"\n    },\n    {\n        label: \"Wisconsin\",\n        value: \"WI\"\n    },\n    {\n        label: \"Wyoming\",\n        value: \"WY\"\n    }\n]\n\n// export const Colors = {\n//     green: \"#c5d5c5\",\n//     gray: \"#9fa9a3\",\n//     beige: \"e3e0cc\",\n//     white: \"f0f0f0\",\n// }","export default __webpack_public_path__ + \"static/media/mountains.a9c01534.jpg\";","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Select from 'react-select'\nimport SearchResults from \"../components/SearchResults\"\nimport API_URLS from \"../urls\"\nimport Header from \"../components/Header\"\nimport { mergeParks } from \"../util\"\nimport { getMultipleSelectedString } from \"../util\"\nimport picture from '../images/mountains.jpg'\n\n// Page for activity based searching\nconst Activities = props => {\n\n    // State hooks for activity list, currently selected activities, and results from API call\n    const [activities, setActivities] = useState([])\n    const [selected, setSelected] = useState([])\n    const [parkResults, setParkResults] = useState([])\n\n    // Fetches list of activities from API\n    const fetchActivities = () => {\n        axios.get(API_URLS.ACTIVITIES)\n        .then((response) => {\n            setActivities(response.data.data.map(item => {\n                return ({\n                    value: item.id,\n                    label: item.name,\n                })\n            }))\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // Fetches park results corresponding with selected activities\n    const fetchParkResults = () => {\n        if (selected.length === 0) {\n            return\n        }\n\n        // Filters parks with AND logic\n        // Only returns parks that have every selected activity \n        axios.get(API_URLS.PARKS_BY_ACTIVITIES(selected))\n        .then((response) => {\n            const isSelectedMultiple = selected.length > 1\n            setParkResults(mergeParks(response.data.data, isSelectedMultiple))\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // Util function to handle rendering of park results\n    const displayParkResults = () => {\n        if (selected.length === 0) {\n            return\n        }\n        else if (parkResults.length === 0) {\n            return <h3>Oops! No parks match the criteria</h3> \n        }\n        else {\n            return <SearchResults parkList={parkResults} />\n        }\n    }\n\n    // triggers once on page load\n    useEffect(() => {\n        fetchActivities()\n    }, [])\n\n    // Calls the park fetch every time the selected activities change\n    useEffect(() => {\n        fetchParkResults()\n    }, [selected])\n\n    return (\n        <div>\n            <Header title={\"Search by Activities\"}/>\n            <div style={{marginBottom: \"2vh\"}}>\n                <img src={picture} alt=\"Image of beautiful lake\" style={{height: '100%', width:\"100%\"}}/>\n            </div>\n            { activities.length ? \n                <Select isMulti options={activities} onChange={setSelected}/> \n                : \n                <h2>Loading Activities</h2>\n            }\n            { selected.length ?\n                <h2>{getMultipleSelectedString(selected)}</h2>\n                :\n                <h2>See parks that have the selected activities!</h2>\n            }\n\n            <div>{displayParkResults()}</div>\n        </div>\n    );\n  };\n  \nexport default Activities;","export default __webpack_public_path__ + \"static/media/canyon.71003aa7.jpg\";","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Select from 'react-select'\nimport SearchResults from \"../components/SearchResults\"\nimport API_URLS from \"../urls\"\nimport Header from \"../components/Header\"\nimport { stateList } from \"../util\"\nimport picture from \"../images/canyon.jpg\"\n\n// Page for state based searching\nconst States = props => {\n\n    // State hooks for activity list, currently selected activities, and results from API call\n    const [selected, setSelected] = useState(null)\n    const [parkResults, setParkResults] = useState([])\n\n    // Fetches park results corresponding with selected states\n    const fetchParkResults = () => {\n        if (selected == null) {\n            return\n        }\n\n        // Filters parks by state\n        axios.get(API_URLS.PARKS_BY_STATE(selected.value))\n        .then((response) => {\n            setParkResults(response.data.data)\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // Util function to handle rendering of park results\n    const displayParkResults = () => {\n        if (selected == null) {\n            return\n        }\n        else if (parkResults.length === 0) {\n            return <h3>Oops! No parks match the criteria</h3> \n        }\n        else {\n            return <SearchResults parkList={parkResults} />\n        }\n    }\n\n    // Calls the park fetch every time the selected state changes\n    useEffect(() => {\n        fetchParkResults()\n    }, [selected])\n\n    return (\n        <div>\n            <Header title={\"Search by State\"}/>\n            <div style={{marginBottom: \"2vh\"}}>\n                <img src={picture} alt=\"Image of canyon\" style={{height: '100%', width:\"100%\"}}/>\n            </div>\n            <Select options={stateList} onChange={setSelected}/> \n\n            { (selected != null) ?\n                <h2>{\"Parks in \" + selected.label}</h2> \n                :\n                <h2>See all national parks within a US state!</h2>\n            }\n\n            <div>{displayParkResults()}</div>\n        </div>\n    );\n  };\n\nexport default States;","export default __webpack_public_path__ + \"static/media/rock.7c6571d5.jpg\";","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Select from 'react-select'\nimport SearchResults from \"../components/SearchResults\"\nimport API_URLS from \"../urls\"\nimport Header from \"../components/Header\"\nimport { mergeParks } from \"../util\"\nimport { getMultipleSelectedString } from \"../util\"\nimport picture from \"../images/rock.jpg\"\n\n\n// Page for topic based searching\nconst Topics = props => {\n\n    // State hooks for topic list, currently selected topics, and results from API call\n    const [topics, setTopics] = useState([])\n    const [selected, setSelected] = useState([])\n    const [parkResults, setParkResults] = useState([])\n\n    // Util function to handle rendering of park results\n    const displayParkResults = () => {\n        if (selected.length === 0) {\n            return\n        }\n        else if (parkResults.length === 0) {\n            return <h3>Oops! No parks match the criteria</h3> \n        }\n        else {\n            return <SearchResults parkList={parkResults} />\n        }\n    }\n\n    // Fetches list of topics from API\n    const fetchTopics = () => {\n        axios.get(API_URLS.TOPICS)\n        .then((response) => {\n            setTopics(response.data.data.map(item => {\n                return ({\n                    value: item.id,\n                    label: item.name,\n                })\n            }))\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // Fetches park results corresponding with selected topics\n    const fetchParkResults = () => {\n        if (selected.length === 0) {\n            return\n        }\n\n        // Filters parks with AND logic\n        // Only returns parks that have every selected topic \n        axios.get(API_URLS.PARKS_BY_TOPICS(selected))\n        .then((response) => {\n            const isSelectedMultiple = selected.length > 1\n            setParkResults(mergeParks(response.data.data, isSelectedMultiple))\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // triggers once on page load\n    useEffect(() => {\n        fetchTopics()\n    }, [])\n\n    // Calls the park fetch every time the selected topics change\n    useEffect(() => {\n        fetchParkResults()\n    }, [selected])\n\n    return (\n        <div>\n            <Header title={\"Search by Topic\"}/>\n            <div style={{marginBottom: \"2vh\"}}>\n                <img src={picture} alt=\"Image of big rock\" style={{height: '100%', width:\"100%\"}}/>\n            </div>\n            { topics.length ? \n                <Select isMulti options={topics} onChange={setSelected}/> \n                : \n                <h2>Loading Topics</h2>\n            }\n            { selected.length ?\n                <h2>{getMultipleSelectedString(selected)}</h2>\n                :\n                <h2>See parks related to the selected topics!</h2>\n            }\n\n            <div>{displayParkResults()}</div>\n        </div>\n    );\n  };\n  \nexport default Topics;","export default __webpack_public_path__ + \"static/media/field.55c59737.jpg\";","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport SearchResults from \"../components/SearchResults\"\nimport API_URLS from \"../urls\"\nimport Header from \"../components/Header\"\nimport Button from \"@mui/material/Button\"\nimport TextField from \"@mui/material/TextField\"\nimport picture from \"../images/field.jpg\"\n\n\n// Page for keyword based searching\nconst Keyword = props => {\n\n    // State hooks for dynamically changing user input, submitted user input, and api call results\n    const [input, setInput] = useState(\"\")\n    const [searched, setSearched] = useState(\"\")\n    const [parkResults, setParkResults] = useState([])\n\n    // Fetches park results corresponding with searched term\n    const fetchParkResults = () => {\n        if (searched == \"\") {\n            return\n        }\n\n        // Filters parks by keyword\n        axios.get(API_URLS.PARKS_BY_KEYWORD(searched))\n        .then((response) => {\n            setParkResults(response.data.data)\n        })\n        // logs any errors to console\n        .catch((error) => {\n            console.log(\"Error: \" + error)\n        })\n    }\n\n    // Util function to handle rendering of park results\n    const displayParkResults = () => {\n        if (searched == \"\") {\n            return\n        }\n        else if (parkResults.length === 0) {\n            return <h3>Oops! No parks match the criteria</h3> \n        }\n        else {\n            return <SearchResults parkList={parkResults} />\n        }\n    }\n\n    // Calls the park fetch every time the search term changes\n    useEffect(() => {\n        fetchParkResults()\n    }, [searched])\n\n    return (\n        <div>\n            <Header title={\"Search by Keyword\"}/>\n            <div style={{marginBottom: \"2vh\"}}>\n                <img src={picture} alt=\"Image of mountain range\" style={{height: '100%', width:\"100%\"}}/>\n            </div>\n            <TextField\n                label=\"Keyword\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                style = {{width: '75vw', marginBottom: '4vh'}}\n            />\n            <Button\n                variant=\"contained\"\n                onClick={() => setSearched(input)}\n            >\n                Submit\n            </Button>\n\n            { (searched !== \"\") ?\n                <h2>{'Parks related to \"' + searched + '\"'}</h2> \n                :\n                <h2>Enter a search term!</h2>\n            }\n\n            <div>{displayParkResults()}</div>\n        </div>\n    );\n  };\n\nexport default Keyword;","import Header from \"../components/Header\"\n\nconst About = props => {\n    return (\n        <div>\n            <Header title=\"About\"/>\n            <p>\n            For the last 100 years, the National Park Service\n            has contributed greatly to the preservation and management\n            of America's national parks, as well as many of its national monuments.\n            More than 330 million people visit the 61 national parks they oversee each year,\n            with 40 million overnight campers. \n            </p>\n            <p>\n                This app was created to inform and encourage viewers to visit National Parks.\n            </p>\n            <a href=\"https://github.com/zjakwani/parks\">Github</a>\n        </div>\n    )\n}\n\nexport default About","import Park from './pages/Park';\nimport Home from './pages/Home';\nimport Sidebar from './components/Sidebar';\nimport Activities from './pages/Activities';\nimport States from './pages/States';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Topics from './pages/Topics';\nimport Keyword from './pages/Keyword';\nimport About from './pages/About';\n\n// Use react-router library for nested routes\nimport {\n  Routes,\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Box sx={{ display: 'flex' }}>\n          <Router basename={process.env.PUBLIC_URL}>\n\n            {/* Wrapped every page with the persistent header and sidebar */}\n            {/* <Header/> */}\n            <Sidebar/>\n\n            <Box\n          component=\"main\"\n          sx={{ flexGrow: 1, p: 3 }}\n        >\n          <Toolbar />\n            <Routes>\n              <Route path=\"\" element={<Home/>}/>\n              <Route path=\"/activities\" element={<Activities/>}/>\n              <Route path=\"/topics\" element={<Topics/>}/>\n              <Route path=\"/states\" element={<States/>}/>\n              <Route path=\"/keyword\" element={<Keyword/>}/>\n              <Route path=\"/about\" element={<About/>}/>\n              <Route path=\"/park/:code\" element={<Park/>}/>\n            </Routes>\n            </Box>\n          </Router>\n        </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  palette: {\n    //type: 'dark',\n    primary: {\n      main: '#757f49',\n    },\n    secondary: {\n      main: '#795548',\n    },\n    background: {\n      default: '#e0e0e0',\n      paper: '#9e9e9e',\n    },\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './theme'\nimport CssBaseline from '@mui/material/CssBaseline';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}